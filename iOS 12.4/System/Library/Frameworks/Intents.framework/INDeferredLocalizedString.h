/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, February 3, 2021 at 10:19:26 PM Australian Eastern Daylight Time
* Operating System: Version 12.4 (Build 16G77)
* Image Source: /System/Library/Frameworks/Intents.framework/Intents
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Intents/Intents-Structs.h>
#import <Foundation/NSString.h>

@class NSString, NSArray, NSURL;

@interface INDeferredLocalizedString : NSString {

	NSString* _formatKey;
	NSString* _table;
	NSArray* _arguments;
	NSString* _bundleIdentifier;
	NSURL* _bundleURL;
	NSString* _cachedLocalization;

}

@property (nonatomic,copy,readonly) NSString * _formatKey;                       //@synthesize formatKey=_formatKey - In the implementation block
@property (nonatomic,copy,readonly) NSString * _table;                           //@synthesize table=_table - In the implementation block
@property (nonatomic,copy,readonly) NSArray * _arguments;                        //@synthesize arguments=_arguments - In the implementation block
@property (nonatomic,copy,readonly) NSString * _bundleIdentifier;                //@synthesize bundleIdentifier=_bundleIdentifier - In the implementation block
@property (nonatomic,copy,readonly) NSURL * _bundleURL;                          //@synthesize bundleURL=_bundleURL - In the implementation block
@property (nonatomic,copy,readonly) NSString * _cachedLocalization;              //@synthesize cachedLocalization=_cachedLocalization - In the implementation block
+(BOOL)supportsSecureCoding;
-(Class)classForKeyedArchiver;
-(id)localizeForLanguage:(id)arg1 ;
-(NSString *)_formatKey;
-(NSString *)_table;
-(NSArray *)_arguments;
-(NSString *)_bundleIdentifier;
-(NSURL *)_bundleURL;
-(NSString *)_cachedLocalization;
-(id)_intents_encodeForProto;
-(id)initWithDeferredFormat:(id)arg1 fromTable:(id)arg2 bundle:(id)arg3 arguments:(char*)arg4 ;
-(unsigned long long)length;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(unsigned short)characterAtIndex:(unsigned long long)arg1 ;
-(Class)classForCoder;
-(void)getCharacters:(unsigned short*)arg1 range:(NSRange)arg2 ;
@end

