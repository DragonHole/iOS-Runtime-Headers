/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, February 3, 2021 at 10:24:13 PM Australian Eastern Daylight Time
* Operating System: Version 12.4 (Build 16G77)
* Image Source: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKitCore/UIViewController.h>
#import <libobjc.A.dylib/PKPaymentAuthorizationStateMachineDelegate.h>
#import <libobjc.A.dylib/PKAuthenticatorDelegate.h>
#import <libobjc.A.dylib/PKPaymentAuthorizationServiceProtocol.h>

@protocol PKPaymentAuthorizationServiceViewControllerDelegatePKPaymentAuthorizationHostProtocol;
@class PKPaymentRequest, PKAuthenticator, PKAMPEnrollmentCardView, PKPaymentAuthorizationStateMachine, NSString;

@interface PKPaymentAMPEnrollmentViewController : UIViewController <PKPaymentAuthorizationStateMachineDelegate, PKAuthenticatorDelegate, PKPaymentAuthorizationServiceProtocol> {

	PKPaymentRequest* _request;
	BOOL _authenticating;
	PKAuthenticator* _authenticator;
	BOOL _needsFinalCallback;
	PKAMPEnrollmentCardView* _cardView;
	BOOL _hostApplicationResignedActive;
	BOOL _hostApplicationEnteredBackground;
	BOOL _treatingHostAsBackgrounded;
	PKPaymentAuthorizationStateMachine* _stateMachine;
	id<PKPaymentAuthorizationServiceViewControllerDelegate><PKPaymentAuthorizationHostProtocol> _delegate;

}

@property (nonatomic,retain) PKPaymentAuthorizationStateMachine * stateMachine;                                                                        //@synthesize stateMachine=_stateMachine - In the implementation block
@property (assign,nonatomic,__weak) id<PKPaymentAuthorizationServiceViewControllerDelegate><PKPaymentAuthorizationHostProtocol> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_suspendAuthentication;
-(void)_resumeAuthenticationWithPreviousError:(id)arg1 ;
-(void)_didFailWithFatalError:(id)arg1 ;
-(void)_didSucceedWithAuthorizationStateParam:(id)arg1 ;
-(void)_didCancel;
-(void)_didFailWithError:(id)arg1 ;
-(void)_processClientCallback:(id)arg1 ;
-(void)_invalidPaymentDataWithParam:(id)arg1 ;
-(long long)_authenticatorPolicy;
-(void)_startEvaluation;
-(void)_setAuthenticating:(BOOL)arg1 ;
-(id)_evaluationRequest;
-(BOOL)paymentAuthorizationStateMachine:(id)arg1 didTransitionFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3 withParam:(id)arg4 ;
-(void)authorizationDidAuthorizePaymentCompleteWithResult:(id)arg1 ;
-(id)_physicalButtonTitle;
-(void)_setupWithPaymentRequest:(id)arg1 fromAppWithLocalizedName:(id)arg2 andApplicationIdentifier:(id)arg3 ;
-(void)_suspendAuthenticationAndForceReset:(BOOL)arg1 ;
-(void)_updateBackgroundedState:(BOOL)arg1 ;
-(void)handleHostApplicationWillResignActive:(BOOL)arg1 ;
-(void)handleHostApplicationDidBecomeActive;
-(void)authorizationDidRequestMerchantSessionCompleteWithSession:(id)arg1 error:(id)arg2 ;
-(void)authorizationDidAuthorizePurchaseCompleteWithStatus:(long long)arg1 ;
-(void)authorizationDidAuthorizePeerPaymentQuoteCompleteWithResult:(id)arg1 ;
-(void)authorizationDidAuthorizeApplePayTrustSignatureCompleteWithResult:(id)arg1 ;
-(void)authorizationDidSelectShippingMethodCompleteWithUpdate:(id)arg1 ;
-(void)authorizationDidSelectShippingAddressCompleteWithUpdate:(id)arg1 ;
-(void)authorizationDidSelectPaymentMethodCompleteWithUpdate:(id)arg1 ;
-(void)handleHostApplicationDidCancel;
-(id)handlePaymentRequest:(id)arg1 fromAppWithLocalizedName:(id)arg2 andApplicationIdentifier:(id)arg3 ;
-(id)init;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<PKPaymentAuthorizationServiceViewControllerDelegate><PKPaymentAuthorizationHostProtocol>)arg1 ;
-(id<PKPaymentAuthorizationServiceViewControllerDelegate><PKPaymentAuthorizationHostProtocol>)delegate;
-(void)loadView;
-(void)viewDidLoad;
-(long long)preferredStatusBarStyle;
-(void)setStateMachine:(PKPaymentAuthorizationStateMachine *)arg1 ;
-(PKPaymentAuthorizationStateMachine *)stateMachine;
-(void)_hostApplicationDidEnterBackground;
-(void)_hostApplicationWillEnterForeground;
@end

