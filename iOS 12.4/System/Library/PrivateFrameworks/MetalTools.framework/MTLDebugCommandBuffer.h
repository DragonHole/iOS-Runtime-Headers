/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, February 3, 2021 at 10:26:15 PM Australian Eastern Daylight Time
* Operating System: Version 12.4 (Build 16G77)
* Image Source: /System/Library/PrivateFrameworks/MetalTools.framework/MetalTools
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MetalTools/MetalTools-Structs.h>
#import <MetalTools/MTLToolsCommandBuffer.h>

@class _MTLCommandEncoder, NSMutableSet;

@interface MTLDebugCommandBuffer : MTLToolsCommandBuffer {

	_MTLCommandEncoder* _currentEncoder;
	NSMutableSet* _buffersBoundForWrite;
	NSMutableSet* _texturesBoundForWrite;
	NSMutableSet* _unsignaledResources;
	unique_ptr<ILayerLockingPolicy, std::__1::default_delete<ILayerLockingPolicy> >* _boundForWriteLockingPolicy;
	vector<std::__1::pair<MTLDebugSharedEvent *, unsigned long long>, std::__1::allocator<std::__1::pair<MTLDebugSharedEvent *, unsigned long long> > >* _waitEvents;

}
-(void)executeSynchronizationNotifications:(int)arg1 ;
-(void)executeSynchronizationNotifications:(int)arg1 scope:(unsigned long long)arg2 resources:(const id*)arg3 count:(unsigned long long)arg4 ;
-(void)addSynchronizationNotification:(/*^block*/id)arg1 ;
-(void)waitUntilCompleted;
-(void)waitUntilScheduled;
-(id)renderCommandEncoderWithDescriptor:(id)arg1 ;
-(id)computeCommandEncoderWithDispatchType:(unsigned long long)arg1 ;
-(void)encodeWaitForEvent:(id)arg1 value:(unsigned long long)arg2 ;
-(void)encodeSignalEvent:(id)arg1 value:(unsigned long long)arg2 ;
-(id)parallelRenderCommandEncoderWithDescriptor:(id)arg1 ;
-(id)sampledRenderCommandEncoderWithDescriptor:(id)arg1 programInfoBuffer:(SCD_Struct_MT5*)arg2 capacity:(unsigned long long)arg3 ;
-(id)sampledComputeCommandEncoderWithProgramInfoBuffer:(SCD_Struct_MT5*)arg1 capacity:(unsigned long long)arg2 ;
-(id)sampledComputeCommandEncoderWithDispatchType:(unsigned long long)arg1 programInfoBuffer:(SCD_Struct_MT5*)arg2 capacity:(unsigned long long)arg3 ;
-(id)fragmentRenderCommandEncoderWithDescriptor:(id)arg1 ;
-(id)sampledFragmentRenderCommandEncoderWithDescriptor:(id)arg1 programInfoBuffer:(SCD_Struct_MT5*)arg2 capacity:(unsigned long long)arg3 ;
-(void)trackUseResource:(id)arg1 usage:(unsigned long long)arg2 ;
-(void)_trackTexture:(id)arg1 ;
-(void)_trackRenderPassAttachmentDescriptor:(id)arg1 ;
-(id)initWithCommandBuffer:(id)arg1 commandQueue:(id)arg2 ;
-(void)trackUseResources:(const id*)arg1 count:(unsigned long long)arg2 usage:(unsigned long long)arg3 ;
-(void)resourceTrackingRecordAccessesToArguments:(id)arg1 bufferFuncArgsPtr:(SCD_Struct_MT0*)arg2 textureFuncArgsPtr:(SCD_Struct_MT0*)arg3 ;
-(void)trackRenderPassDescriptor:(id)arg1 ;
-(void)onParallelRenderCommanderEndEncoding;
-(id)computeCommandEncoder;
-(id)blitCommandEncoder;
-(void)dealloc;
-(void)commit;
@end

