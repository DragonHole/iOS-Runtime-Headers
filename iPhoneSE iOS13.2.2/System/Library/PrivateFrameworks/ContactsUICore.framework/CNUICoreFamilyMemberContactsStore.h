/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 7, 2019 at 3:16:18 AM Pacific Standard Time
* Operating System: Version 13.2.3 (Build 17B111)
* Image Source: /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CNUICoreFamilyMemberContactsUpdating.h>

@protocol CNUICoreContactStoreFacade, CNSchedulerProvider;
@class FAFamilyMember;

@interface CNUICoreFamilyMemberContactsStore : NSObject <CNUICoreFamilyMemberContactsUpdating> {

	id<CNUICoreContactStoreFacade> _familyMemberScopedContactStore;
	id<CNUICoreContactStoreFacade> _mainContactStore;
	FAFamilyMember* _familyMember;
	id<CNSchedulerProvider> _schedulerProvider;

}

@property (nonatomic,readonly) id<CNUICoreContactStoreFacade> familyMemberScopedContactStore;              //@synthesize familyMemberScopedContactStore=_familyMemberScopedContactStore - In the implementation block
@property (nonatomic,readonly) id<CNUICoreContactStoreFacade> mainContactStore;                            //@synthesize mainContactStore=_mainContactStore - In the implementation block
@property (nonatomic,readonly) FAFamilyMember * familyMember;                                              //@synthesize familyMember=_familyMember - In the implementation block
@property (nonatomic,readonly) id<CNSchedulerProvider> schedulerProvider;                                  //@synthesize schedulerProvider=_schedulerProvider - In the implementation block
@property (nonatomic,readonly) id<CNScheduler> backgroundOrImmediateScheduler; 
-(id)init;
-(id<CNUICoreContactStoreFacade>)mainContactStore;
-(id<CNSchedulerProvider>)schedulerProvider;
-(FAFamilyMember *)familyMember;
-(id<CNUICoreContactStoreFacade>)familyMemberScopedContactStore;
-(id<CNScheduler>)backgroundOrImmediateScheduler;
-(id)initWithFamilyMemberScopedContactStore:(id)arg1 familyMember:(id)arg2 schedulerProvider:(id)arg3 ;
-(id)updateContactWhitelistByAddingContacts:(id)arg1 ;
-(id)updateContactListByUpdatingContacts:(id)arg1 ;
-(id)updateContactWhitelistByRemovingContacts:(id)arg1 ;
-(id)initWithFamilyMemberScopedContactStore:(id)arg1 mainContactStore:(id)arg2 familyMember:(id)arg3 schedulerProvider:(id)arg4 ;
-(void)commonInitWithWithFamilyMemberScopedContactStoreFacade:(id)arg1 mainContactStoreFacade:(id)arg2 familyMember:(id)arg3 schedulerProvider:(id)arg4 ;
-(id)updateContactListByAddingContacts:(id)arg1 tryToRefetchContactsFromMainStore:(BOOL)arg2 ;
-(id)contactsRefetchedFromMainStoreIfFound:(id)arg1 ;
-(id)updateContactWhitelistByAddingContacts:(id)arg1 tryToRefetchContactsFromMainStore:(BOOL)arg2 ;
-(id)contactsInsertedIntoFamilyMemberContainerIfMissingFuture:(id)arg1 tryToRefetchContactsFromMainStore:(BOOL)arg2 preserveEditsToProvidedContactsOverContactsFoundInFamilyMemberStore:(BOOL)arg3 ;
-(id)contactsFoundAndNotFoundInFamilyMemberContainerFuture:(id)arg1 ;
-(id)updateContactListByAddingContactsFromCandidateContacts:(id)arg1 ;
-(id)updateContactListByAddingContacts:(id)arg1 ;
-(id)updateContactListByRemovingContacts:(id)arg1 ;
-(id)updateContactWhitelistByAddingContactsFromCandidateContacts:(id)arg1 ;
-(id)initWithFamilyMemberScopedContactStoreFacade:(id)arg1 mainContactStoreFacade:(id)arg2 familyMember:(id)arg3 schedulerProvider:(id)arg4 ;
@end

