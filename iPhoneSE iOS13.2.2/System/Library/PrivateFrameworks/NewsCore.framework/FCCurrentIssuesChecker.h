/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 7, 2019 at 3:15:50 AM Pacific Standard Time
* Operating System: Version 13.2.3 (Build 17B111)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FCCurrentIssuesChecker.h>

@protocol FCCurrentIssuesChecker <NSObject>
@required
-(void)fetchUsersCurrentIssuesWithCompletion:(/*^block*/id)arg1;
-(void)fetchCurrentIssuesWithCompletion:(/*^block*/id)arg1;

@end


@protocol FCContentContext;
@class FCSubscriptionController, FCIssueReadingHistory, NSString;

@interface FCCurrentIssuesChecker : NSObject <FCCurrentIssuesChecker> {

	id<FCContentContext> _context;
	FCSubscriptionController* _subscriptionController;
	FCIssueReadingHistory* _issueReadingHistory;

}

@property (nonatomic,retain) id<FCContentContext> context;                                   //@synthesize context=_context - In the implementation block
@property (nonatomic,retain) FCSubscriptionController * subscriptionController;              //@synthesize subscriptionController=_subscriptionController - In the implementation block
@property (nonatomic,retain) FCIssueReadingHistory * issueReadingHistory;                    //@synthesize issueReadingHistory=_issueReadingHistory - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(id<FCContentContext>)context;
-(void)setContext:(id<FCContentContext>)arg1 ;
-(FCSubscriptionController *)subscriptionController;
-(FCIssueReadingHistory *)issueReadingHistory;
-(id)initWithContext:(id)arg1 subscriptionController:(id)arg2 issueReadingHistory:(id)arg3 ;
-(void)fetchUsersCurrentIssuesWithCompletion:(/*^block*/id)arg1 ;
-(id)_promiseFollowedChannelIDs;
-(id)demoFollowedChannelIDs;
-(id)_promiseCurrentIssuesFromChannelIDs:(id)arg1 withChainingdata:(id)arg2 ;
-(id)sortIssues:(id)arg1 basedOnTagIDs:(id)arg2 ;
-(id)_promiseFilterUnreadIssuesWithFromIssues:(id)arg1 withChainingdata:(id)arg2 ;
-(void)fetchCurrentIssuesWithCompletion:(/*^block*/id)arg1 ;
-(void)setSubscriptionController:(FCSubscriptionController *)arg1 ;
-(void)setIssueReadingHistory:(FCIssueReadingHistory *)arg1 ;
@end

